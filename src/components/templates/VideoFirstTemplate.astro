---
export interface Props {
  project: any;
}

const { project } = Astro.props;
const { data } = project;

// Get hero video (first video or specified hero video)
const heroVideo = data.heroVideo || data.media?.find(m => m.type === 'video')?.src;
const otherMedia = data.media?.filter(m => m.src !== heroVideo) || [];
---

<article class="project-detail video-first">
  <header class="project-header">
    <h1>{data.title}</h1>
    {data.blurb && <p class="project-blurb">{data.blurb}</p>}
    {data.date && <time class="project-date">{new Date(data.date).toLocaleDateString()}</time>}
  </header>
  
  <div class="project-content">
    {heroVideo && (
      <div class="hero-video">
        <video 
          src={heroVideo} 
          controls 
          muted
          poster={data.thumbnail}
          onmouseover="this.play()"
          onmouseout="this.pause()"
        >
          Your browser does not support the video tag.
        </video>
      </div>
    )}
    
    <div class="project-description">
      <slot />
    </div>
    
    {data.links && data.links.length > 0 && (
      <div class="project-links">
        <h3>Links</h3>
        <div class="links-list">
          {data.links.map((link) => (
            <a href={link.url} target="_blank" class="project-link">
              {link.label}
            </a>
          ))}
        </div>
      </div>
    )}
    
    {otherMedia.length > 0 && (
      <div class="project-media">
        <h3>Additional Media</h3>
        <div class="media-grid">
          {otherMedia.map((media) => (
            <div class="media-item">
              {media.type === 'video' ? (
                <video 
                  src={media.src} 
                  controls 
                  muted
                  onmouseover="this.play()"
                  onmouseout="this.pause()"
                >
                  Your browser does not support the video tag.
                </video>
              ) : (
                <img src={media.src} alt={media.alt || data.title} />
              )}
              {media.caption && <p class="media-caption">{media.caption}</p>}
            </div>
          ))}
        </div>
      </div>
    )}
  </div>
</article>

<style>
  .project-detail {
    max-width: 1000px;
    margin: 0 auto;
  }
  
  .project-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid #333;
  }
  
  h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: #ffffff;
  }
  
  .project-blurb {
    font-size: 1.2rem;
    color: #cccccc;
    margin-bottom: 1rem;
  }
  
  .project-date {
    color: #888;
    font-size: 0.9rem;
  }
  
  .project-content {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }
  
  .hero-video {
    margin-bottom: 2rem;
  }
  
  .hero-video video {
    width: 100%;
    max-height: 500px;
    border-radius: 0.5rem;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  }
  
  .project-description {
    font-size: 1.1rem;
    line-height: 1.7;
    color: #e5e5e5;
  }
  
  .project-description :global(h2) {
    font-size: 1.5rem;
    margin: 2rem 0 1rem 0;
    color: var(--accent-color, #3b82f6);
  }
  
  .project-description :global(h3) {
    font-size: 1.25rem;
    margin: 1.5rem 0 0.75rem 0;
    color: #ffffff;
  }
  
  .project-description :global(p) {
    margin-bottom: 1rem;
  }
  
  .project-links h3,
  .project-media h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--accent-color, #3b82f6);
  }
  
  .links-list {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }
  
  .project-link {
    display: inline-block;
    background: var(--accent-color, #3b82f6);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    text-decoration: none;
    font-weight: 500;
    transition: background 0.2s;
  }
  
  .project-link:hover {
    background: #2563eb;
  }
  
  .media-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }
  
  .media-item {
    background: #1a1a1a;
    border-radius: 0.5rem;
    overflow: hidden;
    border: 1px solid #333;
  }
  
  .media-item img,
  .media-item video {
    width: 100%;
    height: auto;
    display: block;
  }
  
  .media-caption {
    padding: 1rem;
    font-size: 0.9rem;
    color: #cccccc;
    margin: 0;
  }
  
  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }
    
    .project-blurb {
      font-size: 1.1rem;
    }
    
    .hero-video video {
      max-height: 300px;
    }
    
    .media-grid {
      grid-template-columns: 1fr;
    }
    
    .links-list {
      flex-direction: column;
    }
    
    .project-link {
      text-align: center;
    }
  }
</style>
